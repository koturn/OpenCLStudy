#ifndef @CL_HPP_INCLUDE_GUARD_MACRO@
#define @CL_HPP_INCLUDE_GUARD_MACRO@


#ifndef CL_HPP_MINIMUM_OPENCL_VERSION
#  cmakedefine CL_HPP_MINIMUM_OPENCL_VERSION @CL_HPP_MINIMUM_OPENCL_VERSION@
#endif  // CL_HPP_MINIMUM_OPENCL_VERSION
#ifndef CL_HPP_TARGET_OPENCL_VERSION
#  cmakedefine CL_HPP_TARGET_OPENCL_VERSION @CL_HPP_TARGET_OPENCL_VERSION@
#endif  // CL_HPP_TARGET_OPENCL_VERSION
#ifndef CL_HPP_CL_1_2_DEFAULT_BUILD
#  cmakedefine CL_HPP_CL_1_2_DEFAULT_BUILD
#endif  // CL_HPP_CL_1_2_DEFAULT_BUILD

#ifndef CL_HPP_ENABLE_EXCEPTIONS
#  cmakedefine CL_HPP_ENABLE_EXCEPTIONS
#endif  // CL_HPP_ENABLE_EXCEPTIONS
#ifndef CL_SILENCE_DEPRECATION
#  cmakedefine CL_SILENCE_DEPRECATION
#endif  // CL_SILENCE_DEPRECATION

#ifndef CL_HPP_NO_STD_STRING
#  cmakedefine CL_HPP_NO_STD_STRING
#endif  // CL_HPP_NO_STD_STRING
#ifndef CL_HPP_NO_STD_VECTOR
#  cmakedefine CL_HPP_NO_STD_VECTOR
#endif  // CL_HPP_NO_STD_VECTOR
#ifndef CL_HPP_NO_STD_ARRAY
#  cmakedefine CL_HPP_NO_STD_ARRAY
#endif  // CL_HPP_NO_STD_ARRAY
#ifndef CL_HPP_NO_STD_UNIQUE_PTR
#  cmakedefine CL_HPP_NO_STD_UNIQUE_PTR
#endif  // CL_HPP_NO_STD_UNIQUE_PTR
#ifndef CL_HPP_USER_OVERRIDE_ERROR_STRINGS
#  cmakedefine CL_HPP_USER_OVERRIDE_ERROR_STRINGS
#endif  // CL_HPP_USER_OVERRIDE_ERROR_STRINGS

#ifndef CL_HPP_ENABLE_SIZE_T_COMPATIBILITY
#  cmakedefine CL_HPP_ENABLE_SIZE_T_COMPATIBILITY
#endif  // CL_HPP_ENABLE_SIZE_T_COMPATIBILITY
#ifndef CL_HPP_ENABLE_PROGRAM_CONSTRUCTION_FROM_ARRAY_COMPATIBILITY
#  cmakedefine CL_HPP_ENABLE_PROGRAM_CONSTRUCTION_FROM_ARRAY_COMPATIBILITY
#endif  // CL_HPP_ENABLE_PROGRAM_CONSTRUCTION_FROM_ARRAY_COMPATIBILITY

#ifndef CL_HPP_USE_CL_DEVICE_FISSION
#  cmakedefine CL_HPP_USE_CL_DEVICE_FISSION
#endif  // CL_HPP_USE_CL_DEVICE_FISSION
#ifndef CL_HPP_USE_CL_SUB_GROUPS_KHR
#  cmakedefine CL_HPP_USE_CL_SUB_GROUPS_KHR
#endif  // CL_HPP_USE_CL_SUB_GROUPS_KHR
#ifndef CL_HPP_USE_CL_IMAGE2D_FROM_BUFFER_KHR
#  cmakedefine CL_HPP_USE_CL_IMAGE2D_FROM_BUFFER_KHR
#endif  // CL_HPP_USE_CL_IMAGE2D_FROM_BUFFER_KHR
#ifndef CL_HPP_USE_DX_INTEROP
#  cmakedefine CL_HPP_USE_DX_INTEROP
#endif  // CL_HPP_USE_DX_INTEROP
#ifndef CL_HPP_USE_IL_KHR
#  cmakedefine CL_HPP_USE_IL_KHR
#endif  // CL_HPP_USE_IL_KHR


#if defined(__GNUC__) && (__GNUC__ > 4 || __GNUC__ == 4 && __GNUC_MINOR__ >= 6)
#  define @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#endif
#ifdef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#  pragma GCC diagnostic push
#  pragma GCC diagnostic ignored "-Weffc++"
#  pragma GCC diagnostic ignored "-Wcast-qual"
#  pragma GCC diagnostic ignored "-Wnoexcept"
#  pragma GCC diagnostic ignored "-Wold-style-cast"
#  pragma GCC diagnostic ignored "-Wunused-parameter"
#  pragma GCC diagnostic ignored "-Wuseless-cast"
#  if __GNUC__ > 4 || __GNUC__ == 4 && __GNUC_MINOR__ >= 7
#    pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
#  endif
#  if __GNUC__ > 5 || __GNUC__ == 5 && __GNUC_MINOR__ >= 1
#    pragma GCC diagnostic ignored "-Wsuggest-final-methods"
#    pragma GCC diagnostic ignored "-Wsuggest-final-types"
#    pragma GCC diagnostic ignored "-Wsuggest-override"
#  endif
#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA

#ifdef _MSC_VER
#  pragma warning(push)
#  pragma warning(disable: 4100)
#  pragma warning(disable: 4505)
#endif  // _MSC_VER


#include <CL/cl2.hpp>


#ifdef _MSC_VER
#  pragma warning(pop)
#endif  // _MSC_VER

#ifdef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#  pragma GCC diagnostic pop
#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#ifdef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#  undef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA


#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@
